name: ci

on:
  push:
    branches:
      - 'main'
  release:
    types: [edited, released]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GH_TOKEN: ${{ github.token }}

jobs:
  ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GH_TOKEN }}

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2
          
      - name: Sync - Build and push
        id: docker_build_sync
        uses: docker/build-push-action@v6
        with:
          file: ./vscoffline/vscsync/Dockerfile          
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          
      - name: Sync - Build and push
        id: docker_build_gallery
        uses: docker/build-push-action@v6
        with:
          file: ./vscoffline/vscgallery/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/vscsync
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/vscgallery
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true